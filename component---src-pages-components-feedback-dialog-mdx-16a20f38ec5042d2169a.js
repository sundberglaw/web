(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{fLVh:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return s}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var a=n("7ljp"),o=n("013z");n("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i,c={},b=(i="PageDescription",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",e)}),l={_frontmatter:c},p=o.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(p,r({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(b,{mdxType:"PageDescription"},Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"<FeedbackDialog>")," component is a modeless dialog that allows your users to provide low-friction, anonymous feedback for a specific page.")),Object(a.b)("h2",null,"Activating the dialog"),Object(a.b)("p",null,"The Feedback button only becomes visisble once you’ve supplied an ",Object(a.b)("inlineCode",{parentName:"p"},"onSubmit")," handler. To do that, we’ll need to shadow the ",Object(a.b)("inlineCode",{parentName:"p"},"FeedbackDialog")," component."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Create a new javascript file under ",Object(a.b)("inlineCode",{parentName:"p"},"src/gatsby-theme-carbon/components/FeedbackDialog/FeedbackDialog.js"),". Matching the filepath exactly is important here.")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Copy the following snippet into your new file"))),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"  import React from 'react';\n  import ThemeFeedbackDialog from 'gatsby-theme-carbon/src/components/FeedbackDialog/FeedbackDialog';\n\n  const FeedbackDialog = ({ props }) => {\n    const onSubmit = data => {\n      console.log({ ...data });\n    };\n\n    return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n  };\n\n  export default FeedbackDialog;\n\n")),Object(a.b)("h2",null,"Creating a handler"),Object(a.b)("p",null,"Next, you’ll need a place to send the data. For the Carbon website, we use a serverless function that forwards the data to a ",Object(a.b)("a",r({parentName:"p"},{href:"https://www.surveygizmo.com/"}),"SurveyGizmo")," quiz.\nYou can see that function ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/carbon-design-system/carbon-website/blob/master/functions/survey.js"}),"here"),"."),Object(a.b)("p",null,"The handler can send a fetch request off to the endpoint you create. Update the ",Object(a.b)("inlineCode",{parentName:"p"},"onSubmit")," handler to send the data wherever you want. This function receives the following arguments:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"experience"),": “Negative”, “Positive” or “Neutral”"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"comment"),": An optional comment"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"path"),": the window location when the survey was submitted")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"const FeedbackDialog = ({ props }) => {\n  const onSubmit = data => {\n    fetch(process.env.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(data),\n  });\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-feedback-dialog-mdx-16a20f38ec5042d2169a.js.map